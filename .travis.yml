language: go
go:
  - "1.x"

os: linux
sudo: required
dist: bionic

services:
  - docker

addons:
  artifacts: true

# Uncomment To override defaults set in travis ci online interface 
#     (these will take precedence).
env:
  - PSIPHON_CORE_VERSION="tags/v2.0.11"
  - PSIPHON_SYSTEM_VERSION="default"

notifications:
  slack:
    secure: ZzIEqFE4XRdE9U2p3aeE32DMtoC8RgjoEavhEQ1oLrWFgUpLktqmp9UVY/U+W6iElilLpDbFpry51+Sv9MWpxJMxr+Q/JJuq/3Bj5KjF/wEtil7qvBYhQ1sM/qUQFG6wRkrMNjZGMiaTmnkWF0rZB8lf7+nbnGFaPW3AVVbD+8gVDWTHI4Hcvvgs0UbrJzoPfpvH0dprOchswc1BBKTgo5c44rvS2fquEMVcqMMiNJ5JQqphuRWLTfzLgOzImSf0/xJJyVp/YTkSnVSg8BcWmDCJ4iB9fJkVyZM9WxcgY/J4T5VzFxfMah9zv2j8UTfzHSMeCJDRL647hdnkmr/Qum/LN91Ey2DJw5KUH743CsAbyGhQML6wZ3NCeEP06hnMDphalU5+BYhtAPyc5CB84g6eLIUQ2EqptuPZpjFQohFnapCTnfB5XKTcW+PjxJsoJzk8x+85Xid+H1nnNxeyf10tLv6Pwy4ZGmEEbsa4SYWXibpIEu3fPJXEdtrht0vM40pDLeUYL6Axmh7hNjmDQOXJG41saF+Rk4AArRhKhMQTmlYCc0e1H2/hIDXUMPbqjHeCpEkaA5W8BFBKynhlJa0JX+rtHDFaK82Di8rXT0NO2ACyG8ZQqk87qePyBYPyfR8hRwhrkmQHlYYOZzV6LBz+ynJuWl9ktcC2irJlHZs=

## Golang Test & CLI build
# Go versions: all specified
install:
  - go get -t ./...
  - go get golang.org/x/lint/golint
  - go get github.com/alecthomas/gometalinter

script:
  - go test -race -v ./tapdance
  - go test -race -v ./tdproxy
  - gometalinter --install
  - gometalinter --disable-all -E vet -E gofmt -E misspell -E ineffassign -E deadcode --tests ./tapdance

## Build job for Psiphon ConsoleClient and Android App
# Go versions: first value in array
jobs:
  include:
    - &build # YAML anchor/alias
      stage: build
      name: "Build cli and Psiphon ConsoleClient on Linux"
      install:
        - go get ./...
        # Substitute build string
        - sed -i.bak "s/buildInfo = \"\"/buildInfo = \"$TRAVIS_BRANCH-$TRAVIS_COMMIT\"/" tapdance/logger.go
        - mkdir -p $GOPATH/src/github.com/Psiphon-Labs
        # Get Specific Psiphon Core Library Release
        - git clone https://github.com/Psiphon-Labs/psiphon-tunnel-core.git $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core
        - (cd $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core && git checkout $PSIPHON_CORE_VERSION -b build-refraction-networking)
        # Remove gotapdance from vendored packages
        - go get github.com/kardianos/govendor
        - (cd $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core && govendor remove github.com/sergeyfrolov/gotapdance/...)
        - (cd $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core && govendor remove github.com/refraction-networking/gotapdance/...)
        # replace sergeyfrolov in tapdance wrapper (NOTE: REMOVE AFTER VENDORING IN PSIPHON CHANGES)
        - sed -i.bak 's/sergeyfrolov/refraction-networking/g' $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core/psiphon/common/tapdance/tapdance.go
        # Enable TapDance logging
        - sed -i.bak 's/refraction_networking_tapdance.Logger().Out = ioutil.Discard//' $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core/psiphon/common/tapdance/tapdance.go
        # Digest this branch's ClientConf into Psiphon's embedded_config
        - ./test_scripts/psiphon_digest_cc.sh ./assets/ClientConf $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core/psiphon/common/tapdance/embedded_config.go
      script:
        - go build -race -o build/cli-$TRAVIS_OS_NAME ./cli
        - go build -race -o build/ConsoleClient-$TRAVIS_OS_NAME -tags 'TAPDANCE' github.com/Psiphon-Labs/psiphon-tunnel-core/ConsoleClient
      after_success:
        # Upload built binaries to S3
        - sudo pip install awscli
        - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then aws s3 sync build s3://$ARTIFACTS_BUCKET/$TRAVIS_REPO_SLUG/$TRAVIS_BRANCH/; fi

    - <<: *build # Same build on OS X
      name: "Build cli and Psiphon ConsoleClient on OS X"
      os: osx

    - <<: *build # Reuse setup steps from build
      name: "Build Psiphon Android Library and App"
      before_script:
        # Get Android build environment
        - docker pull refraction/psiandroid
        - mkdir -p $GOPATH/src/bitbucket.org/psiphon
        - hg clone https://bitbucket.org/psiphon/psiphon-circumvention-system $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system
        - (cd $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system && hg checkout $PSIPHON_SYSTEM_VERSION)
        # Use modified EmbeddedValues.java for TapDance
        - openssl enc -nosalt -aes-256-cbc -md sha512 -pbkdf2 -iter 1000 -pass pass:$aes_cbc_passwd  -d -in build/EmbeddedValues.java.enc -out $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system/Android/app/src/main/java/com/psiphon3/psiphonlibrary/EmbeddedValues.java
        # Patched tunneling protocol for TapDance
        - patch $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system/Android/app/src/main/java/com/psiphon3/psiphonlibrary/TunnelManager.java build/TunnelManager.java.patch
      script:
        # Build Psiphon Android Library ca.psiphon.aar
        #   The psiandroid image has a pined version of gomobile --> executing go get ./... will pull over that version of gomobile to the latest version
        #   this will break your build if not done carefully. At the same time we need to go get all of the dependencies for gotapdance and utls. 
        #   Since neither of those have dependencies on gomobile we can cd to their directories and pull them as necessary.
        - docker run --rm -v $GOPATH//src/github.com/Psiphon-Labs/psiphon-tunnel-core:/go/src/github.com/Psiphon-Labs/psiphon-tunnel-core -v $TRAVIS_BUILD_DIR:/go/src/github.com/refraction-networking/gotapdance refraction/psiandroid:latest /bin/bash -c 'cd $GOPATH/src/github.com/refraction-networking/gotapdance && go get ./...;cd $GOPATH/src/github.com/refraction-networking/utls && go get ./...; cd /go/src/github.com/Psiphon-Labs/psiphon-tunnel-core/MobileLibrary/Android && ./make.bash "TAPDANCE"'; cd -
        
        - mv $GOPATH/src/github.com/Psiphon-Labs/psiphon-tunnel-core/MobileLibrary/Android/ca.psiphon.aar build/
        - cp build/ca.psiphon.aar $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system/Android/app/libs/

        # Build the Psiphon android app with the core library that we just compiled. 
        #   This (at time of writing this comment) used android sdk 24.4.1 which has recently changed from using sdkmanager to using a purely android cli
        #   interface. So because the android build system in the psiandroid image has not accepted licensing for a few libraries we have to do that 
        #   ourselves in this run command. This also cannot use the `yes` program because that sends the y character too quickly and actually declines
        #   the license. 
        - docker run -v $TRAVIS_BUILD_DIR:/go/src/github.com/refraction-networking/gotapdance -v $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system/Android:/go/src/bitbucket.org/psiphon/psiphon-circumvention-system/Android refraction/psiandroid:latest /bin/bash -c '(while true; do echo 'y'; sleep 2; done) | /android-sdk-linux/tools/android update sdk --no-ui --all --filter build-tools-27.0.3; cd /go/src/bitbucket.org/psiphon/psiphon-circumvention-system/Android && ./gradlew assembleDebug'
        - sudo mv $GOPATH/src/bitbucket.org/psiphon/psiphon-circumvention-system/Android/app/build/outputs/apk/debug/PsiphonAndroid-debug.apk build/
